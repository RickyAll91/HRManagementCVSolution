// <auto-generated />
using System;
using HRManagement.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HRManagement.Server.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230828134509_Fixes")]
    partial class Fixes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Duende.IdentityServer.EntityFramework.Entities.DeviceFlowCodes", b =>
                {
                    b.Property<string>("UserCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(50000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DeviceCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Expiration")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("UserCode");

                    b.HasIndex("DeviceCode")
                        .IsUnique();

                    b.HasIndex("Expiration");

                    b.ToTable("DeviceCodes", (string)null);
                });

            modelBuilder.Entity("Duende.IdentityServer.EntityFramework.Entities.Key", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Algorithm")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DataProtected")
                        .HasColumnType("bit");

                    b.Property<bool>("IsX509Certificate")
                        .HasColumnType("bit");

                    b.Property<string>("Use")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Use");

                    b.ToTable("Keys", (string)null);
                });

            modelBuilder.Entity("Duende.IdentityServer.EntityFramework.Entities.PersistedGrant", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ConsumedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(50000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Key");

                    b.HasIndex("ConsumedTime");

                    b.HasIndex("Expiration");

                    b.HasIndex("SubjectId", "ClientId", "Type");

                    b.HasIndex("SubjectId", "SessionId", "Type");

                    b.ToTable("PersistedGrants", (string)null);
                });

            modelBuilder.Entity("HRManagement.Shared.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex(new[] { "NormalizedEmail" }, "EmailIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("HRManagement.Shared.Models.Benefit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BenefitId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Attivo")
                        .HasColumnType("bit");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Benefit");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.BenefitContratto", b =>
                {
                    b.Property<int>("BenefitContrattoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BenefitContrattoId"));

                    b.Property<int?>("BenefitId")
                        .HasColumnType("int");

                    b.Property<int>("ContrattoId")
                        .HasColumnType("int");

                    b.Property<int?>("Id")
                        .HasColumnType("int");

                    b.HasKey("BenefitContrattoId")
                        .HasName("PK_Benefit_Contratti");

                    b.HasIndex("ContrattoId");

                    b.HasIndex("Id");

                    b.ToTable("Benefits_Contratti");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.Candidato", b =>
                {
                    b.Property<int>("CandidatoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CandidatoId"));

                    b.Property<string>("CF")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ComuneNascita")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProvinciaNascita")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RecapitoTelefonico")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Residenza")
                        .HasColumnType("int");

                    b.Property<string>("StatoNascita")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TipoContratto")
                        .HasColumnType("int");

                    b.HasKey("CandidatoId");

                    b.HasIndex("Residenza");

                    b.HasIndex("TipoContratto");

                    b.ToTable("Candidato");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.Colloquio", b =>
                {
                    b.Property<int>("ColloquioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ColloquioId"));

                    b.Property<int>("Candidato")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataColloquio")
                        .HasColumnType("datetime2");

                    b.Property<int>("HR")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReferenteTecnico")
                        .HasColumnType("int");

                    b.Property<int>("SedeColloquio")
                        .HasColumnType("int");

                    b.Property<int>("TipologiaColloquio")
                        .HasColumnType("int");

                    b.Property<string>("Valutazione")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ColloquioId");

                    b.HasIndex("Candidato");

                    b.HasIndex("HR");

                    b.HasIndex("ReferenteTecnico");

                    b.HasIndex("SedeColloquio");

                    b.HasIndex("TipologiaColloquio");

                    b.ToTable("Colloquio");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.Comune", b =>
                {
                    b.Property<int>("ComuneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComuneId"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Provincia")
                        .HasColumnType("int");

                    b.HasKey("ComuneId");

                    b.HasIndex("Provincia");

                    b.ToTable("Comune");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.Contratto", b =>
                {
                    b.Property<int>("ContrattoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContrattoId"));

                    b.Property<int>("LivelloContrattuale")
                        .HasColumnType("int");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TipoDocumento")
                        .HasColumnType("int");

                    b.Property<int>("TipologiaContratto")
                        .HasColumnType("int");

                    b.HasKey("ContrattoId");

                    b.HasIndex("LivelloContrattuale");

                    b.HasIndex("TipoDocumento");

                    b.HasIndex("TipologiaContratto");

                    b.ToTable("Contratto");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.Dipendente", b =>
                {
                    b.Property<int>("DipendenteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DipendenteId"));

                    b.Property<string>("CF")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Contratto")
                        .HasColumnType("int");

                    b.Property<int>("Mansione")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Sede")
                        .HasColumnType("int");

                    b.Property<string>("Utente")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DipendenteId");

                    b.HasIndex("Contratto");

                    b.HasIndex("Mansione");

                    b.HasIndex("Sede");

                    b.HasIndex("Utente");

                    b.ToTable("Dipendente");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.EsperienzaLavorativa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Azienda")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Candidato")
                        .HasColumnType("int");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fine")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Inizio")
                        .HasColumnType("datetime2");

                    b.Property<int>("Mansione")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Candidato");

                    b.HasIndex("Mansione");

                    b.ToTable("Esperienze");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.HardSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HardSkillID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Attivo")
                        .HasColumnType("bit");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("HardSkill");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.HardSkillCandidato", b =>
                {
                    b.Property<int>("HardSkillCandidatoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HardSkillCandidatoId"));

                    b.Property<int>("CandidatoId")
                        .HasColumnType("int");

                    b.Property<int>("HardSkillId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("HardSkillCandidatoId");

                    b.HasIndex("CandidatoId");

                    b.HasIndex("Id");

                    b.ToTable("HardSkill_Candidato");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.HardSkillDipendente", b =>
                {
                    b.Property<int>("HardSkillDipendenteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HardSkillDipendenteId"));

                    b.Property<int>("DipendenteId")
                        .HasColumnType("int");

                    b.Property<int>("HardSkillId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("HardSkillDipendenteId");

                    b.HasIndex("DipendenteId");

                    b.HasIndex("Id");

                    b.ToTable("HardSkill_Dipendente");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.LivelloContrattuale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LivelloContrattoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Attivo")
                        .HasColumnType("bit");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("LivelloContrattuale");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.Mansione", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MansioneId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Attivo")
                        .HasColumnType("bit");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Mansione");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.Provincia", b =>
                {
                    b.Property<int>("ProvinciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProvinciaId"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ProvinciaId");

                    b.ToTable("Provincia");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.Sede", b =>
                {
                    b.Property<int>("SedeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SedeId"));

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmailSede")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Indirizzo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RecapitoTelefonico")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Referente")
                        .HasColumnType("int");

                    b.HasKey("SedeId");

                    b.HasIndex("Referente");

                    b.ToTable("Sede");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.SoftSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SoftSkillId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Attivo")
                        .HasColumnType("bit");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SoftSkill");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.SoftSkillCandidato", b =>
                {
                    b.Property<int>("SofSkillCandidatoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SofSkillCandidatoId"));

                    b.Property<int>("CandidatoId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("SoftSkillId")
                        .HasColumnType("int");

                    b.HasKey("SofSkillCandidatoId");

                    b.HasIndex("CandidatoId");

                    b.HasIndex("Id");

                    b.ToTable("SoftSkill_Candidato");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.SoftSkillDipendente", b =>
                {
                    b.Property<int>("SoftSkillDipendenteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SoftSkillDipendenteId"));

                    b.Property<int>("DipendenteId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("SoftSkillId")
                        .HasColumnType("int");

                    b.HasKey("SoftSkillDipendenteId");

                    b.HasIndex("DipendenteId");

                    b.HasIndex("Id");

                    b.ToTable("SoftSkill_Dipendente");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.TipologiaColloquio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TipoColloquioId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Attivo")
                        .HasColumnType("bit");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipologiaColloquio");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.TipologiaContratto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TipoContrattoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Attivo")
                        .HasColumnType("bit");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipologiaContratto");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.TipologiaDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TipoDocumentoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Attivo")
                        .HasColumnType("bit");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipologiaDocumento");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.TitoloStudio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TitoloStudioId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Attivo")
                        .HasColumnType("bit");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TitoloStudio");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.TitoloStudioCandidato", b =>
                {
                    b.Property<int>("TitoloStudioCandidatoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TitoloStudioCandidatoId"));

                    b.Property<int>("CandidatoId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("TitoloStudioId")
                        .HasColumnType("int");

                    b.HasKey("TitoloStudioCandidatoId");

                    b.HasIndex("CandidatoId");

                    b.HasIndex("Id");

                    b.ToTable("TitoloStudio_Candidato");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.TitoloStudioDipendente", b =>
                {
                    b.Property<int>("TitoloStudioDipendenteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TitoloStudioDipendenteId"));

                    b.Property<int>("DipendenteId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("TitoloStudioId")
                        .HasColumnType("int");

                    b.HasKey("TitoloStudioDipendenteId");

                    b.HasIndex("DipendenteId");

                    b.HasIndex("Id");

                    b.ToTable("TitoloStudio_Dipendente");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("HRManagement.Shared.Models.BenefitContratto", b =>
                {
                    b.HasOne("HRManagement.Shared.Models.Contratto", "ContrattoNavigation")
                        .WithMany("BenefitsContratti")
                        .HasForeignKey("ContrattoId")
                        .IsRequired()
                        .HasConstraintName("FK_Benefits_Contratti_Contratto");

                    b.HasOne("HRManagement.Shared.Models.Benefit", "BenefitNavigation")
                        .WithMany("BenefitsContratti")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK_Benefits_Contratti_Benefit");

                    b.Navigation("BenefitNavigation");

                    b.Navigation("ContrattoNavigation");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.Candidato", b =>
                {
                    b.HasOne("HRManagement.Shared.Models.Comune", "ResidenzaNavigation")
                        .WithMany("Candidati")
                        .HasForeignKey("Residenza")
                        .IsRequired()
                        .HasConstraintName("FK_Candidato_Comune");

                    b.HasOne("HRManagement.Shared.Models.TipologiaContratto", "TipoContrattoNavigation")
                        .WithMany("Candidati")
                        .HasForeignKey("TipoContratto")
                        .HasConstraintName("FK_Candidato_TipologiaContratto");

                    b.Navigation("ResidenzaNavigation");

                    b.Navigation("TipoContrattoNavigation");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.Colloquio", b =>
                {
                    b.HasOne("HRManagement.Shared.Models.Candidato", "CandidatoNavigation")
                        .WithMany("ColloquioCandidato")
                        .HasForeignKey("Candidato")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRManagement.Shared.Models.Dipendente", "HRNavigation")
                        .WithMany("ColloquiHr")
                        .HasForeignKey("HR")
                        .IsRequired()
                        .HasConstraintName("FK_Colloquio_DipendenteHR");

                    b.HasOne("HRManagement.Shared.Models.Dipendente", "ReferenteTecnicoNavigation")
                        .WithMany("ColloquiReferenteTecnico")
                        .HasForeignKey("ReferenteTecnico")
                        .HasConstraintName("FK_Colloquio_DipendenteTecnico");

                    b.HasOne("HRManagement.Shared.Models.Sede", "SedeColloquioNavigation")
                        .WithMany("Colloqui")
                        .HasForeignKey("SedeColloquio")
                        .IsRequired()
                        .HasConstraintName("FK_Colloquio_Sede");

                    b.HasOne("HRManagement.Shared.Models.TipologiaColloquio", "TipologiaColloquioNavigation")
                        .WithMany("Colloqui")
                        .HasForeignKey("TipologiaColloquio")
                        .IsRequired()
                        .HasConstraintName("FK_Colloquio_TipologiaColloquio");

                    b.Navigation("CandidatoNavigation");

                    b.Navigation("HRNavigation");

                    b.Navigation("ReferenteTecnicoNavigation");

                    b.Navigation("SedeColloquioNavigation");

                    b.Navigation("TipologiaColloquioNavigation");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.Comune", b =>
                {
                    b.HasOne("HRManagement.Shared.Models.Provincia", "ProvinciaNavigation")
                        .WithMany("Comuni")
                        .HasForeignKey("Provincia")
                        .IsRequired()
                        .HasConstraintName("FK_Comune_Provincia");

                    b.Navigation("ProvinciaNavigation");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.Contratto", b =>
                {
                    b.HasOne("HRManagement.Shared.Models.LivelloContrattuale", "LivelloContrattualeNavigation")
                        .WithMany("Contratti")
                        .HasForeignKey("LivelloContrattuale")
                        .IsRequired()
                        .HasConstraintName("FK_Contratto_LivelloContrattuale");

                    b.HasOne("HRManagement.Shared.Models.TipologiaDocumento", "TipoDocumentoNavigation")
                        .WithMany("Contratti")
                        .HasForeignKey("TipoDocumento")
                        .IsRequired()
                        .HasConstraintName("FK_Contratto_TipologiaDocumento");

                    b.HasOne("HRManagement.Shared.Models.TipologiaContratto", "TipologiaContrattoNavigation")
                        .WithMany("Contratti")
                        .HasForeignKey("TipologiaContratto")
                        .IsRequired()
                        .HasConstraintName("FK_Contratto_TipologiaContratto");

                    b.Navigation("LivelloContrattualeNavigation");

                    b.Navigation("TipoDocumentoNavigation");

                    b.Navigation("TipologiaContrattoNavigation");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.Dipendente", b =>
                {
                    b.HasOne("HRManagement.Shared.Models.Contratto", "ContrattoNavigation")
                        .WithMany("Dipendenti")
                        .HasForeignKey("Contratto")
                        .IsRequired()
                        .HasConstraintName("FK_Dipendente_Contratto");

                    b.HasOne("HRManagement.Shared.Models.Mansione", "MansioneNavigation")
                        .WithMany("Dipendenti")
                        .HasForeignKey("Mansione")
                        .IsRequired()
                        .HasConstraintName("FK_Mansione_Dipendente");

                    b.HasOne("HRManagement.Shared.Models.Sede", "SedeNavigation")
                        .WithMany("Dipendenti")
                        .HasForeignKey("Sede")
                        .IsRequired()
                        .HasConstraintName("FK_Dipendente_Sede");

                    b.HasOne("HRManagement.Shared.Models.ApplicationUser", "UtenteNavigation")
                        .WithMany("Dipendenti")
                        .HasForeignKey("Utente")
                        .HasConstraintName("FK_Dipendente_AspNetUsers");

                    b.Navigation("ContrattoNavigation");

                    b.Navigation("MansioneNavigation");

                    b.Navigation("SedeNavigation");

                    b.Navigation("UtenteNavigation");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.EsperienzaLavorativa", b =>
                {
                    b.HasOne("HRManagement.Shared.Models.Candidato", "CandidatoNavigation")
                        .WithMany("EsperienzeLavorative")
                        .HasForeignKey("Candidato")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRManagement.Shared.Models.Mansione", "MansioneNavigation")
                        .WithMany("EsperienzeLavorative")
                        .HasForeignKey("Mansione")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CandidatoNavigation");

                    b.Navigation("MansioneNavigation");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.HardSkillCandidato", b =>
                {
                    b.HasOne("HRManagement.Shared.Models.Candidato", "CandidatoNavigation")
                        .WithMany("HardSkillsCandidati")
                        .HasForeignKey("CandidatoId")
                        .IsRequired()
                        .HasConstraintName("FK_HardSkill_Candidato_Candidato");

                    b.HasOne("HRManagement.Shared.Models.HardSkill", "HardSkillNavigation")
                        .WithMany("HardSkillsCandidati")
                        .HasForeignKey("Id")
                        .IsRequired()
                        .HasConstraintName("FK_HardSkill_Candidato_HardSkill");

                    b.Navigation("CandidatoNavigation");

                    b.Navigation("HardSkillNavigation");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.HardSkillDipendente", b =>
                {
                    b.HasOne("HRManagement.Shared.Models.Dipendente", "DipendenteNavigation")
                        .WithMany("HardSkillsDipendenti")
                        .HasForeignKey("DipendenteId")
                        .IsRequired()
                        .HasConstraintName("FK_HardSkill_Dipendente_Dipendente");

                    b.HasOne("HRManagement.Shared.Models.HardSkill", "HardSkillNavigation")
                        .WithMany("HardSkillsDipendenti")
                        .HasForeignKey("Id")
                        .IsRequired()
                        .HasConstraintName("FK_HardSkill_Dipendente_HardSkill");

                    b.Navigation("DipendenteNavigation");

                    b.Navigation("HardSkillNavigation");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.Sede", b =>
                {
                    b.HasOne("HRManagement.Shared.Models.Dipendente", "ReferenteNavigation")
                        .WithMany("Sedi")
                        .HasForeignKey("Referente")
                        .IsRequired()
                        .HasConstraintName("FK_Sede_Dipendente");

                    b.Navigation("ReferenteNavigation");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.SoftSkillCandidato", b =>
                {
                    b.HasOne("HRManagement.Shared.Models.Candidato", "CandidatoNavigation")
                        .WithMany("SoftSkillCandidati")
                        .HasForeignKey("CandidatoId")
                        .IsRequired()
                        .HasConstraintName("FK_SoftSkill_Candidato_Candidato");

                    b.HasOne("HRManagement.Shared.Models.SoftSkill", "SoftSkillNavigation")
                        .WithMany("SoftSkillsCandidati")
                        .HasForeignKey("Id")
                        .IsRequired()
                        .HasConstraintName("FK_SoftSkill_Candidato_SoftSkill");

                    b.Navigation("CandidatoNavigation");

                    b.Navigation("SoftSkillNavigation");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.SoftSkillDipendente", b =>
                {
                    b.HasOne("HRManagement.Shared.Models.Dipendente", "DipendenteNavigation")
                        .WithMany("SoftSkillsDipendenti")
                        .HasForeignKey("DipendenteId")
                        .IsRequired()
                        .HasConstraintName("FK_SoftSkill_Dipendente_Dipendente");

                    b.HasOne("HRManagement.Shared.Models.SoftSkill", "SoftSkillNavigation")
                        .WithMany("SoftSkillsDipendenti")
                        .HasForeignKey("Id")
                        .IsRequired()
                        .HasConstraintName("FK_SoftSkill_Dipendente_SoftSkill");

                    b.Navigation("DipendenteNavigation");

                    b.Navigation("SoftSkillNavigation");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.TitoloStudioCandidato", b =>
                {
                    b.HasOne("HRManagement.Shared.Models.Candidato", "CandidatoNavigation")
                        .WithMany("TitoliStudioCandidati")
                        .HasForeignKey("CandidatoId")
                        .IsRequired()
                        .HasConstraintName("FK_TitoloStudio_Candidato_Candidato");

                    b.HasOne("HRManagement.Shared.Models.TitoloStudio", "TitoloStudioNavigation")
                        .WithMany("TitoliStudioCandidati")
                        .HasForeignKey("Id")
                        .IsRequired()
                        .HasConstraintName("FK_TitoloStudio_Candidato_TitoloStudio");

                    b.Navigation("CandidatoNavigation");

                    b.Navigation("TitoloStudioNavigation");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.TitoloStudioDipendente", b =>
                {
                    b.HasOne("HRManagement.Shared.Models.Dipendente", "DipendenteNavigation")
                        .WithMany("TitoliStudioDipendenti")
                        .HasForeignKey("DipendenteId")
                        .IsRequired()
                        .HasConstraintName("FK_TitoloStudio_Dipendente_Dipendente");

                    b.HasOne("HRManagement.Shared.Models.TitoloStudio", "TitoloStudioNavigation")
                        .WithMany("TitoliStudioDipendenti")
                        .HasForeignKey("Id")
                        .IsRequired()
                        .HasConstraintName("FK_TitoloStudio_Dipendente_TitoloStudio");

                    b.Navigation("DipendenteNavigation");

                    b.Navigation("TitoloStudioNavigation");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("HRManagement.Shared.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("HRManagement.Shared.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRManagement.Shared.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("HRManagement.Shared.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HRManagement.Shared.Models.ApplicationUser", b =>
                {
                    b.Navigation("Dipendenti");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.Benefit", b =>
                {
                    b.Navigation("BenefitsContratti");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.Candidato", b =>
                {
                    b.Navigation("ColloquioCandidato");

                    b.Navigation("EsperienzeLavorative");

                    b.Navigation("HardSkillsCandidati");

                    b.Navigation("SoftSkillCandidati");

                    b.Navigation("TitoliStudioCandidati");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.Comune", b =>
                {
                    b.Navigation("Candidati");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.Contratto", b =>
                {
                    b.Navigation("BenefitsContratti");

                    b.Navigation("Dipendenti");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.Dipendente", b =>
                {
                    b.Navigation("ColloquiHr");

                    b.Navigation("ColloquiReferenteTecnico");

                    b.Navigation("HardSkillsDipendenti");

                    b.Navigation("Sedi");

                    b.Navigation("SoftSkillsDipendenti");

                    b.Navigation("TitoliStudioDipendenti");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.HardSkill", b =>
                {
                    b.Navigation("HardSkillsCandidati");

                    b.Navigation("HardSkillsDipendenti");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.LivelloContrattuale", b =>
                {
                    b.Navigation("Contratti");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.Mansione", b =>
                {
                    b.Navigation("Dipendenti");

                    b.Navigation("EsperienzeLavorative");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.Provincia", b =>
                {
                    b.Navigation("Comuni");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.Sede", b =>
                {
                    b.Navigation("Colloqui");

                    b.Navigation("Dipendenti");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.SoftSkill", b =>
                {
                    b.Navigation("SoftSkillsCandidati");

                    b.Navigation("SoftSkillsDipendenti");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.TipologiaColloquio", b =>
                {
                    b.Navigation("Colloqui");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.TipologiaContratto", b =>
                {
                    b.Navigation("Candidati");

                    b.Navigation("Contratti");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.TipologiaDocumento", b =>
                {
                    b.Navigation("Contratti");
                });

            modelBuilder.Entity("HRManagement.Shared.Models.TitoloStudio", b =>
                {
                    b.Navigation("TitoliStudioCandidati");

                    b.Navigation("TitoliStudioDipendenti");
                });
#pragma warning restore 612, 618
        }
    }
}
