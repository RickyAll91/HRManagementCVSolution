@page "/aggiungi/colloqui"
@page "/modifica/colloqui/{Id:int}"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h3>@Titolo Colloquio</h3>
@if (Colloquio is null)
{
    <p><em>Caricamento...</em></p>
}
else
{
    <EditForm Model="@Colloquio" OnValidSubmit="SaveUser">
        <DataAnnotationsValidator />
        <div class="mb-3">
            <label for="Data" class="form-label">Data</label>
            <div class="col-md-4">
                <InputDate id="Data" class="form-control" @bind-Value="Colloquio.DataColloquio" placeholder />
            </div>
            <ValidationMessage For="@(() => Colloquio.DataColloquio)" />
        </div>
        <div class="mb-3">
            <label for="Hr" class="form-label">HR Assegnato</label>
            <div class="col-md-4">
                <InputSelect id="Hr" @bind-Value="Colloquio.HR">
                    <option label=" ">Scegli un Opzione</option>
                    @foreach (var e in HR!)
                    {
                        <option value="@e.DipendenteId">@e.Nome @e.Cognome</option>
                    }
                </InputSelect>
            </div>
        </div>
        <div class="mb-3">
            <label for="TipoColloquio" class="form-label">Tipologia Di Colloquio</label>
            <div class="col-md-4">
                <InputSelect id="TipoColloquio" @bind-Value="Colloquio.TipologiaColloquio">
                    <option label=" ">Scegli un Opzione</option>
                    @foreach (var t in TipologieColloquio!)
                    {
                        <option value="@t.Id">@t.Descrizione</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => Colloquio.TipologiaColloquio)" />
            </div>
        </div>
        @if (Colloquio.TipologiaColloquio == 2)
        {
            <div class="mb-3">
                <label for="Tecnico" class="form-label">Referente Tecnico</label>
                <div class="col-md-4">
                    <InputSelect id="Tecnico" @bind-Value="Colloquio.ReferenteTecnico">
                        <option label=" ">Scegli un Opzione</option>
                        @foreach (var r in ReferenteTecnico!)
                        {
                            <option value="@r.DipendenteId">@r.Nome @r.Cognome</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => Colloquio.ReferenteTecnico)" />
                </div>
            </div>
        }
        else
        {
            Colloquio.ReferenteTecnico = null;
        }
        <div class="mb-3">
            <label for="Sede" class="form-label">Sede Colloquio</label>
            <div class="col-md-4">
                <InputSelect id="Sede" @bind-Value="Colloquio.SedeColloquio">
                    <option label=" ">Scegli un Opzione</option>
                    @foreach (var s in Sedi!)
                    {
                        <option value="@s.SedeId">@s.Descrizione</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => Colloquio.SedeColloquio)" />
            </div>
        </div>
        <div class="mb-3">
            <label for="Candidato" class="form-label">Candidato</label>
            <div class="col-md-4">
                <InputSelect id="Candidato" @bind-Value="Colloquio.Candidato">
                    <option label=" ">Scegli un Opzione</option>
                    @foreach (var c in Candidati!)
                    {
                        <option value="@c.CandidatoId">@c.Nome @c.Cognome</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => Colloquio.Candidato)" />
            </div>
        </div>
        <div class="mb-3">
            <label for="Valutazione" class="form-label">Valutazione</label>
            <div class="col-md-4">
                <InputText id="Valutazione" @bind-Value="Colloquio.Valutazione" />
            </div>
            <ValidationMessage For="@(() => Colloquio.Valutazione)" />
        </div>
        <div class="mb-3">
            <label for="Note" class="form-label">Note</label>
            <div class="col-md-4">
                <InputText id="Note" @bind-Value="Colloquio.Note" />
            </div>
            <ValidationMessage For="@(() => Colloquio.Note)" />
        </div>
        <div class="form-group">
            <button type="submit" class="btn btn-primary">Salva</button>
            <button class="btn btn-light" @onclick="Cancel">Cancella</button>
        </div>
    </EditForm>
}


@code {
    [Parameter]
    public int? Id { get; set; }
    public Colloquio? Colloquio = new();
    protected string Titolo = "Aggiungi";
    protected List<Sede>? Sedi = new();
    protected List<Dipendente>? Dipendenti = new();
    protected List<Candidato>? Candidati = new();
    protected List<TipologiaColloquio>? TipologieColloquio = new();
    protected List<Dipendente>? HR = new();
    protected List<Dipendente>? ReferenteTecnico = new();

    protected override async Task OnParametersSetAsync()
    {
        Sedi = await Http.GetFromJsonAsync<List<Sede>>("api/sedi");
        Dipendenti = await Http.GetFromJsonAsync<List<Dipendente>>("api/dipendenti");
        Candidati = await Http.GetFromJsonAsync<List<Candidato>>("api/candidati");
        TipologieColloquio = await Http.GetFromJsonAsync<List<TipologiaColloquio>>("api/tipologiecolloqui");
        HR = Dipendenti?.Where(d => d.Mansione == 4).ToList();
        ReferenteTecnico = Dipendenti?.Where(d => d.Mansione is 1 or 3 or 7).ToList();
        if (Id is not null)
        {
            Titolo = "Modifica";
            Colloquio = (await Http.GetFromJsonAsync<List<Colloquio>>($"api/colloqui/{Id}"))![0];
        }
    }
    protected async Task SaveUser()
    {
        if (Colloquio!.TipologiaColloquio != 2)
        {
            Colloquio.ReferenteTecnico = null;
        }
        if (Colloquio.ColloquioId != 0)
        {
            await Http.PutAsJsonAsync($"api/colloqui/{Id}", Colloquio);
        }
        else
        {
            await Http.PostAsJsonAsync($"api/colloqui", Colloquio);
        }
        Cancel();
    }
    public void Cancel()
    {
        NavigationManager.NavigateTo($"/visualizza/Colloqui");
    }
}